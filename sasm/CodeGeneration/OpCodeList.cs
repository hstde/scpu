namespace Sasm.CodeGeneration
{
    public static partial class OpCodes
    {
        public static readonly OpCode NOP = new OpCode(OpCodeValues.NOP, OperandType.None);
        public static readonly OpCode LD_A_IMM8 = new OpCode(OpCodeValues.LD_A_IMM8, OperandType.Implicit8);
        public static readonly OpCode LD_B_IMM8 = new OpCode(OpCodeValues.LD_B_IMM8, OperandType.Implicit8);
        public static readonly OpCode LD_C_IMM8 = new OpCode(OpCodeValues.LD_C_IMM8, OperandType.Implicit8);
        public static readonly OpCode LD_D_IMM8 = new OpCode(OpCodeValues.LD_D_IMM8, OperandType.Implicit8);
        public static readonly OpCode LD_E_IMM8 = new OpCode(OpCodeValues.LD_E_IMM8, OperandType.Implicit8);
        public static readonly OpCode LD_H_IMM8 = new OpCode(OpCodeValues.LD_H_IMM8, OperandType.Implicit8);
        public static readonly OpCode LD_L_IMM8 = new OpCode(OpCodeValues.LD_L_IMM8, OperandType.Implicit8);
        public static readonly OpCode LD_BC_IMM16 = new OpCode(OpCodeValues.LD_BC_IMM16, OperandType.Implicit16);
        public static readonly OpCode LD_DE_IMM16 = new OpCode(OpCodeValues.LD_DE_IMM16, OperandType.Implicit16);
        public static readonly OpCode LD_HL_IMM16 = new OpCode(OpCodeValues.LD_HL_IMM16, OperandType.Implicit16);
        public static readonly OpCode LD_IX_IMM16 = new OpCode(OpCodeValues.LD_IX_IMM16, OperandType.Implicit16);
        public static readonly OpCode LD_IY_IMM16 = new OpCode(OpCodeValues.LD_IY_IMM16, OperandType.Implicit16);
        public static readonly OpCode LD_A_ABS = new OpCode(OpCodeValues.LD_A_ABS, OperandType.Absolute);
        public static readonly OpCode LD_HL_ABS = new OpCode(OpCodeValues.LD_HL_ABS, OperandType.Absolute);
        public static readonly OpCode LD_A_IND_BC = new OpCode(OpCodeValues.LD_A_IND_BC, OperandType.Indirect);
        public static readonly OpCode LD_HL_IND_BC = new OpCode(OpCodeValues.LD_HL_IND_BC, OperandType.Indirect);
        public static readonly OpCode LD_A_IND_DE = new OpCode(OpCodeValues.LD_A_IND_DE, OperandType.Indirect);
        public static readonly OpCode LD_HL_IND_DE = new OpCode(OpCodeValues.LD_HL_IND_DE, OperandType.Indirect);
        public static readonly OpCode LD_A_IND_HL = new OpCode(OpCodeValues.LD_A_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_B_IND_HL = new OpCode(OpCodeValues.LD_B_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_C_IND_HL = new OpCode(OpCodeValues.LD_C_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_D_IND_HL = new OpCode(OpCodeValues.LD_D_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_E_IND_HL = new OpCode(OpCodeValues.LD_E_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_H_IND_HL = new OpCode(OpCodeValues.LD_H_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_L_IND_HL = new OpCode(OpCodeValues.LD_L_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_BC_IND_HL = new OpCode(OpCodeValues.LD_BC_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_DE_IND_HL = new OpCode(OpCodeValues.LD_DE_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_HL_IND_HL = new OpCode(OpCodeValues.LD_HL_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_A_IND_IX = new OpCode(OpCodeValues.LD_A_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_B_IND_IX = new OpCode(OpCodeValues.LD_B_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_C_IND_IX = new OpCode(OpCodeValues.LD_C_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_D_IND_IX = new OpCode(OpCodeValues.LD_D_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_E_IND_IX = new OpCode(OpCodeValues.LD_E_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_H_IND_IX = new OpCode(OpCodeValues.LD_H_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_L_IND_IX = new OpCode(OpCodeValues.LD_L_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_HL_IND_IX = new OpCode(OpCodeValues.LD_HL_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_A_IND_IY = new OpCode(OpCodeValues.LD_A_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_B_IND_IY = new OpCode(OpCodeValues.LD_B_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_C_IND_IY = new OpCode(OpCodeValues.LD_C_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_D_IND_IY = new OpCode(OpCodeValues.LD_D_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_E_IND_IY = new OpCode(OpCodeValues.LD_E_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_H_IND_IY = new OpCode(OpCodeValues.LD_H_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_L_IND_IY = new OpCode(OpCodeValues.LD_L_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_HL_IND_IY = new OpCode(OpCodeValues.LD_HL_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_A_IND_SP = new OpCode(OpCodeValues.LD_A_IND_SP, OperandType.Indirect);
        public static readonly OpCode LD_HL_IND_SP = new OpCode(OpCodeValues.LD_HL_IND_SP, OperandType.Indirect);
        public static readonly OpCode LD_A_IND_HL_DISP = new OpCode(OpCodeValues.LD_A_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_B_IND_HL_DISP = new OpCode(OpCodeValues.LD_B_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_C_IND_HL_DISP = new OpCode(OpCodeValues.LD_C_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_D_IND_HL_DISP = new OpCode(OpCodeValues.LD_D_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_E_IND_HL_DISP = new OpCode(OpCodeValues.LD_E_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_H_IND_HL_DISP = new OpCode(OpCodeValues.LD_H_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_L_IND_HL_DISP = new OpCode(OpCodeValues.LD_L_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_BC_IND_HL_DISP = new OpCode(OpCodeValues.LD_BC_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_DE_IND_HL_DISP = new OpCode(OpCodeValues.LD_DE_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_HL_IND_HL_DISP = new OpCode(OpCodeValues.LD_HL_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_A_IND_IX_DISP = new OpCode(OpCodeValues.LD_A_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_HL_IND_IX_DISP = new OpCode(OpCodeValues.LD_HL_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_A_IND_IY_DISP = new OpCode(OpCodeValues.LD_A_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_HL_IND_IY_DISP = new OpCode(OpCodeValues.LD_HL_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_A_IND_SP_DISP = new OpCode(OpCodeValues.LD_A_IND_SP_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_HL_IND_SP_DISP = new OpCode(OpCodeValues.LD_HL_IND_SP_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_ABS_A = new OpCode(OpCodeValues.LD_ABS_A, OperandType.Absolute);
        public static readonly OpCode LD_ABS_HL = new OpCode(OpCodeValues.LD_ABS_HL, OperandType.Absolute);
        public static readonly OpCode LD_IND_BC_A = new OpCode(OpCodeValues.LD_IND_BC_A, OperandType.Indirect);
        public static readonly OpCode LD_IND_BC_HL = new OpCode(OpCodeValues.LD_IND_BC_HL, OperandType.Indirect);
        public static readonly OpCode LD_IND_DE_A = new OpCode(OpCodeValues.LD_IND_DE_A, OperandType.Indirect);
        public static readonly OpCode LD_IND_DE_HL = new OpCode(OpCodeValues.LD_IND_DE_HL, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_A = new OpCode(OpCodeValues.LD_IND_HL_A, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_B = new OpCode(OpCodeValues.LD_IND_HL_B, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_C = new OpCode(OpCodeValues.LD_IND_HL_C, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_D = new OpCode(OpCodeValues.LD_IND_HL_D, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_E = new OpCode(OpCodeValues.LD_IND_HL_E, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_H = new OpCode(OpCodeValues.LD_IND_HL_H, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_L = new OpCode(OpCodeValues.LD_IND_HL_L, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_BC = new OpCode(OpCodeValues.LD_IND_HL_BC, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_DE = new OpCode(OpCodeValues.LD_IND_HL_DE, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_HL = new OpCode(OpCodeValues.LD_IND_HL_HL, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_A = new OpCode(OpCodeValues.LD_IND_IX_A, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_B = new OpCode(OpCodeValues.LD_IND_IX_B, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_C = new OpCode(OpCodeValues.LD_IND_IX_C, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_D = new OpCode(OpCodeValues.LD_IND_IX_D, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_E = new OpCode(OpCodeValues.LD_IND_IX_E, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_H = new OpCode(OpCodeValues.LD_IND_IX_H, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_L = new OpCode(OpCodeValues.LD_IND_IX_L, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_HL = new OpCode(OpCodeValues.LD_IND_IX_HL, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_A = new OpCode(OpCodeValues.LD_IND_IY_A, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_B = new OpCode(OpCodeValues.LD_IND_IY_B, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_C = new OpCode(OpCodeValues.LD_IND_IY_C, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_D = new OpCode(OpCodeValues.LD_IND_IY_D, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_E = new OpCode(OpCodeValues.LD_IND_IY_E, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_H = new OpCode(OpCodeValues.LD_IND_IY_H, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_L = new OpCode(OpCodeValues.LD_IND_IY_L, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_HL = new OpCode(OpCodeValues.LD_IND_IY_HL, OperandType.Indirect);
        public static readonly OpCode LD_IND_SP_A = new OpCode(OpCodeValues.LD_IND_SP_A, OperandType.Indirect);
        public static readonly OpCode LD_IND_SP_HL = new OpCode(OpCodeValues.LD_IND_SP_HL, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_DISP_A = new OpCode(OpCodeValues.LD_IND_HL_DISP_A, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_HL_DISP_B = new OpCode(OpCodeValues.LD_IND_HL_DISP_B, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_HL_DISP_C = new OpCode(OpCodeValues.LD_IND_HL_DISP_C, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_HL_DISP_D = new OpCode(OpCodeValues.LD_IND_HL_DISP_D, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_HL_DISP_E = new OpCode(OpCodeValues.LD_IND_HL_DISP_E, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_HL_DISP_H = new OpCode(OpCodeValues.LD_IND_HL_DISP_H, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_HL_DISP_L = new OpCode(OpCodeValues.LD_IND_HL_DISP_L, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_HL_DISP_BC = new OpCode(OpCodeValues.LD_IND_HL_DISP_BC, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_HL_DISP_DE = new OpCode(OpCodeValues.LD_IND_HL_DISP_DE, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_HL_DISP_HL = new OpCode(OpCodeValues.LD_IND_HL_DISP_HL, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IX_DISP_A = new OpCode(OpCodeValues.LD_IND_IX_DISP_A, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IX_DISP_HL = new OpCode(OpCodeValues.LD_IND_IX_DISP_HL, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_A = new OpCode(OpCodeValues.LD_IND_IY_DISP_A, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_HL = new OpCode(OpCodeValues.LD_IND_IY_DISP_HL, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_SP_DISP_A = new OpCode(OpCodeValues.LD_IND_SP_DISP_A, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_SP_DISP_HL = new OpCode(OpCodeValues.LD_IND_SP_DISP_HL, OperandType.IndirectDisplacement);
        public static readonly OpCode MOV_B_A = new OpCode(OpCodeValues.MOV_B_A, OperandType.None);
        public static readonly OpCode MOV_C_A = new OpCode(OpCodeValues.MOV_C_A, OperandType.None);
        public static readonly OpCode MOV_D_A = new OpCode(OpCodeValues.MOV_D_A, OperandType.None);
        public static readonly OpCode MOV_E_A = new OpCode(OpCodeValues.MOV_E_A, OperandType.None);
        public static readonly OpCode MOV_H_A = new OpCode(OpCodeValues.MOV_H_A, OperandType.None);
        public static readonly OpCode MOV_L_A = new OpCode(OpCodeValues.MOV_L_A, OperandType.None);
        public static readonly OpCode MOV_A_B = new OpCode(OpCodeValues.MOV_A_B, OperandType.None);
        public static readonly OpCode MOV_A_C = new OpCode(OpCodeValues.MOV_A_C, OperandType.None);
        public static readonly OpCode MOV_A_D = new OpCode(OpCodeValues.MOV_A_D, OperandType.None);
        public static readonly OpCode MOV_A_E = new OpCode(OpCodeValues.MOV_A_E, OperandType.None);
        public static readonly OpCode MOV_A_H = new OpCode(OpCodeValues.MOV_A_H, OperandType.None);
        public static readonly OpCode MOV_A_L = new OpCode(OpCodeValues.MOV_A_L, OperandType.None);
        public static readonly OpCode MOV_HL_BC = new OpCode(OpCodeValues.MOV_HL_BC, OperandType.None);
        public static readonly OpCode MOV_HL_DE = new OpCode(OpCodeValues.MOV_HL_DE, OperandType.None);
        public static readonly OpCode MOV_BC_HL = new OpCode(OpCodeValues.MOV_BC_HL, OperandType.None);
        public static readonly OpCode MOV_DE_HL = new OpCode(OpCodeValues.MOV_DE_HL, OperandType.None);
        public static readonly OpCode MOV_IX_HL = new OpCode(OpCodeValues.MOV_IX_HL, OperandType.None);
        public static readonly OpCode MOV_IY_HL = new OpCode(OpCodeValues.MOV_IY_HL, OperandType.None);
        public static readonly OpCode MOV_HL_IX = new OpCode(OpCodeValues.MOV_HL_IX, OperandType.None);
        public static readonly OpCode MOV_HL_IY = new OpCode(OpCodeValues.MOV_HL_IY, OperandType.None);
        public static readonly OpCode AND_IMM8 = new OpCode(OpCodeValues.AND_IMM8, OperandType.Implicit8);
        public static readonly OpCode AND_B = new OpCode(OpCodeValues.AND_B, OperandType.None);
        public static readonly OpCode AND_C = new OpCode(OpCodeValues.AND_C, OperandType.None);
        public static readonly OpCode AND_D = new OpCode(OpCodeValues.AND_D, OperandType.None);
        public static readonly OpCode AND_E = new OpCode(OpCodeValues.AND_E, OperandType.None);
        public static readonly OpCode AND_H = new OpCode(OpCodeValues.AND_H, OperandType.None);
        public static readonly OpCode AND_L = new OpCode(OpCodeValues.AND_L, OperandType.None);
        public static readonly OpCode OR_IMM8 = new OpCode(OpCodeValues.OR_IMM8, OperandType.Implicit8);
        public static readonly OpCode OR_B = new OpCode(OpCodeValues.OR_B, OperandType.None);
        public static readonly OpCode OR_C = new OpCode(OpCodeValues.OR_C, OperandType.None);
        public static readonly OpCode OR_D = new OpCode(OpCodeValues.OR_D, OperandType.None);
        public static readonly OpCode OR_E = new OpCode(OpCodeValues.OR_E, OperandType.None);
        public static readonly OpCode OR_H = new OpCode(OpCodeValues.OR_H, OperandType.None);
        public static readonly OpCode OR_L = new OpCode(OpCodeValues.OR_L, OperandType.None);
        public static readonly OpCode XOR_IMM8 = new OpCode(OpCodeValues.XOR_IMM8, OperandType.Implicit8);
        public static readonly OpCode XOR_B = new OpCode(OpCodeValues.XOR_B, OperandType.None);
        public static readonly OpCode XOR_C = new OpCode(OpCodeValues.XOR_C, OperandType.None);
        public static readonly OpCode XOR_D = new OpCode(OpCodeValues.XOR_D, OperandType.None);
        public static readonly OpCode XOR_E = new OpCode(OpCodeValues.XOR_E, OperandType.None);
        public static readonly OpCode XOR_H = new OpCode(OpCodeValues.XOR_H, OperandType.None);
        public static readonly OpCode XOR_L = new OpCode(OpCodeValues.XOR_L, OperandType.None);
        public static readonly OpCode NOT = new OpCode(OpCodeValues.NOT, OperandType.None);
        public static readonly OpCode NEG = new OpCode(OpCodeValues.NEG, OperandType.None);
        public static readonly OpCode SHL = new OpCode(OpCodeValues.SHL, OperandType.None);
        public static readonly OpCode SCL = new OpCode(OpCodeValues.SCL, OperandType.None);
        public static readonly OpCode SHR = new OpCode(OpCodeValues.SHR, OperandType.None);
        public static readonly OpCode SCR = new OpCode(OpCodeValues.SCR, OperandType.None);
        public static readonly OpCode ADD_A_IMM8 = new OpCode(OpCodeValues.ADD_A_IMM8, OperandType.Implicit8);
        public static readonly OpCode ADD_HL_IMM8 = new OpCode(OpCodeValues.ADD_HL_IMM8, OperandType.Implicit8);
        public static readonly OpCode ADD_HL_A = new OpCode(OpCodeValues.ADD_HL_A, OperandType.None);
        public static readonly OpCode ADD_A_B = new OpCode(OpCodeValues.ADD_A_B, OperandType.None);
        public static readonly OpCode ADD_A_C = new OpCode(OpCodeValues.ADD_A_C, OperandType.None);
        public static readonly OpCode ADD_A_D = new OpCode(OpCodeValues.ADD_A_D, OperandType.None);
        public static readonly OpCode ADD_A_E = new OpCode(OpCodeValues.ADD_A_E, OperandType.None);
        public static readonly OpCode ADD_A_H = new OpCode(OpCodeValues.ADD_A_H, OperandType.None);
        public static readonly OpCode ADD_A_L = new OpCode(OpCodeValues.ADD_A_L, OperandType.None);
        public static readonly OpCode ADC_A_IMM8 = new OpCode(OpCodeValues.ADC_A_IMM8, OperandType.Implicit8);
        public static readonly OpCode ADC_HL_IMM8 = new OpCode(OpCodeValues.ADC_HL_IMM8, OperandType.Implicit8);
        public static readonly OpCode ADC_HL_A = new OpCode(OpCodeValues.ADC_HL_A, OperandType.None);
        public static readonly OpCode ADC_A_B = new OpCode(OpCodeValues.ADC_A_B, OperandType.None);
        public static readonly OpCode ADC_A_C = new OpCode(OpCodeValues.ADC_A_C, OperandType.None);
        public static readonly OpCode ADC_A_D = new OpCode(OpCodeValues.ADC_A_D, OperandType.None);
        public static readonly OpCode ADC_A_E = new OpCode(OpCodeValues.ADC_A_E, OperandType.None);
        public static readonly OpCode ADC_A_H = new OpCode(OpCodeValues.ADC_A_H, OperandType.None);
        public static readonly OpCode ADC_A_L = new OpCode(OpCodeValues.ADC_A_L, OperandType.None);
        public static readonly OpCode SUB_A_IMM8 = new OpCode(OpCodeValues.SUB_A_IMM8, OperandType.Implicit8);
        public static readonly OpCode SUB_HL_IMM8 = new OpCode(OpCodeValues.SUB_HL_IMM8, OperandType.Implicit8);
        public static readonly OpCode SUB_HL_A = new OpCode(OpCodeValues.SUB_HL_A, OperandType.None);
        public static readonly OpCode SUB_A_B = new OpCode(OpCodeValues.SUB_A_B, OperandType.None);
        public static readonly OpCode SUB_A_C = new OpCode(OpCodeValues.SUB_A_C, OperandType.None);
        public static readonly OpCode SUB_A_D = new OpCode(OpCodeValues.SUB_A_D, OperandType.None);
        public static readonly OpCode SUB_A_E = new OpCode(OpCodeValues.SUB_A_E, OperandType.None);
        public static readonly OpCode SUB_A_H = new OpCode(OpCodeValues.SUB_A_H, OperandType.None);
        public static readonly OpCode SUB_A_L = new OpCode(OpCodeValues.SUB_A_L, OperandType.None);
        public static readonly OpCode SBC_A_IMM8 = new OpCode(OpCodeValues.SBC_A_IMM8, OperandType.Implicit8);
        public static readonly OpCode SBC_HL_IMM8 = new OpCode(OpCodeValues.SBC_HL_IMM8, OperandType.Implicit8);
        public static readonly OpCode SBC_HL_A = new OpCode(OpCodeValues.SBC_HL_A, OperandType.None);
        public static readonly OpCode SBC_A_B = new OpCode(OpCodeValues.SBC_A_B, OperandType.None);
        public static readonly OpCode SBC_A_C = new OpCode(OpCodeValues.SBC_A_C, OperandType.None);
        public static readonly OpCode SBC_A_D = new OpCode(OpCodeValues.SBC_A_D, OperandType.None);
        public static readonly OpCode SBC_A_E = new OpCode(OpCodeValues.SBC_A_E, OperandType.None);
        public static readonly OpCode SBC_A_H = new OpCode(OpCodeValues.SBC_A_H, OperandType.None);
        public static readonly OpCode SBC_A_L = new OpCode(OpCodeValues.SBC_A_L, OperandType.None);
        public static readonly OpCode INC_A = new OpCode(OpCodeValues.INC_A, OperandType.None);
        public static readonly OpCode INC_B = new OpCode(OpCodeValues.INC_B, OperandType.None);
        public static readonly OpCode INC_C = new OpCode(OpCodeValues.INC_C, OperandType.None);
        public static readonly OpCode INC_D = new OpCode(OpCodeValues.INC_D, OperandType.None);
        public static readonly OpCode INC_E = new OpCode(OpCodeValues.INC_E, OperandType.None);
        public static readonly OpCode INC_H = new OpCode(OpCodeValues.INC_H, OperandType.None);
        public static readonly OpCode INC_L = new OpCode(OpCodeValues.INC_L, OperandType.None);
        public static readonly OpCode INC_BC = new OpCode(OpCodeValues.INC_BC, OperandType.None);
        public static readonly OpCode INC_DE = new OpCode(OpCodeValues.INC_DE, OperandType.None);
        public static readonly OpCode INC_HL = new OpCode(OpCodeValues.INC_HL, OperandType.None);
        public static readonly OpCode INC_IX = new OpCode(OpCodeValues.INC_IX, OperandType.None);
        public static readonly OpCode INC_IY = new OpCode(OpCodeValues.INC_IY, OperandType.None);
        public static readonly OpCode DEC_A = new OpCode(OpCodeValues.DEC_A, OperandType.None);
        public static readonly OpCode DEC_B = new OpCode(OpCodeValues.DEC_B, OperandType.None);
        public static readonly OpCode DEC_C = new OpCode(OpCodeValues.DEC_C, OperandType.None);
        public static readonly OpCode DEC_D = new OpCode(OpCodeValues.DEC_D, OperandType.None);
        public static readonly OpCode DEC_E = new OpCode(OpCodeValues.DEC_E, OperandType.None);
        public static readonly OpCode DEC_H = new OpCode(OpCodeValues.DEC_H, OperandType.None);
        public static readonly OpCode DEC_L = new OpCode(OpCodeValues.DEC_L, OperandType.None);
        public static readonly OpCode DEC_BC = new OpCode(OpCodeValues.DEC_BC, OperandType.None);
        public static readonly OpCode DEC_DE = new OpCode(OpCodeValues.DEC_DE, OperandType.None);
        public static readonly OpCode DEC_HL = new OpCode(OpCodeValues.DEC_HL, OperandType.None);
        public static readonly OpCode DEC_IX = new OpCode(OpCodeValues.DEC_IX, OperandType.None);
        public static readonly OpCode DEC_IY = new OpCode(OpCodeValues.DEC_IY, OperandType.None);
        public static readonly OpCode CMP_A_IMM8 = new OpCode(OpCodeValues.CMP_A_IMM8, OperandType.Implicit8);
        public static readonly OpCode CMP_A_B = new OpCode(OpCodeValues.CMP_A_B, OperandType.None);
        public static readonly OpCode CMP_A_C = new OpCode(OpCodeValues.CMP_A_C, OperandType.None);
        public static readonly OpCode CMP_HL_BC = new OpCode(OpCodeValues.CMP_HL_BC, OperandType.None);
        public static readonly OpCode CMP_HL_DE = new OpCode(OpCodeValues.CMP_HL_DE, OperandType.None);
        public static readonly OpCode CMP_HL_IX = new OpCode(OpCodeValues.CMP_HL_IX, OperandType.None);
        public static readonly OpCode CMP_HL_IY = new OpCode(OpCodeValues.CMP_HL_IY, OperandType.None);
        public static readonly OpCode TEST_A_IMM8 = new OpCode(OpCodeValues.TEST_A_IMM8, OperandType.Implicit8);
        public static readonly OpCode TEST_A_B = new OpCode(OpCodeValues.TEST_A_B, OperandType.None);
        public static readonly OpCode TEST_A_C = new OpCode(OpCodeValues.TEST_A_C, OperandType.None);
        public static readonly OpCode TEST_HL_BC = new OpCode(OpCodeValues.TEST_HL_BC, OperandType.None);
        public static readonly OpCode TEST_HL_DE = new OpCode(OpCodeValues.TEST_HL_DE, OperandType.None);
        public static readonly OpCode TEST_HL_IX = new OpCode(OpCodeValues.TEST_HL_IX, OperandType.None);
        public static readonly OpCode TEST_HL_IY = new OpCode(OpCodeValues.TEST_HL_IY, OperandType.None);
        public static readonly OpCode PUSH_AF = new OpCode(OpCodeValues.PUSH_AF, OperandType.None);
        public static readonly OpCode PUSH_LR = new OpCode(OpCodeValues.PUSH_LR, OperandType.None);
        public static readonly OpCode POP_AF = new OpCode(OpCodeValues.POP_AF, OperandType.None);
        public static readonly OpCode POP_LR = new OpCode(OpCodeValues.POP_LR, OperandType.None);
        public static readonly OpCode J_IMM16 = new OpCode(OpCodeValues.J_IMM16, OperandType.Implicit16);
        public static readonly OpCode J_HL = new OpCode(OpCodeValues.J_HL, OperandType.None);
        public static readonly OpCode JZ_IMM16 = new OpCode(OpCodeValues.JZ_IMM16, OperandType.Implicit16);
        public static readonly OpCode JNZ_IMM16 = new OpCode(OpCodeValues.JNZ_IMM16, OperandType.Implicit16);
        public static readonly OpCode JC_IMM16 = new OpCode(OpCodeValues.JC_IMM16, OperandType.Implicit16);
        public static readonly OpCode JNC_IMM16 = new OpCode(OpCodeValues.JNC_IMM16, OperandType.Implicit16);
        public static readonly OpCode JS_IMM16 = new OpCode(OpCodeValues.JS_IMM16, OperandType.Implicit16);
        public static readonly OpCode JNS_IMM16 = new OpCode(OpCodeValues.JNS_IMM16, OperandType.Implicit16);
        public static readonly OpCode JL_IMM16 = new OpCode(OpCodeValues.JL_IMM16, OperandType.Implicit16);
        public static readonly OpCode JL_HL = new OpCode(OpCodeValues.JL_HL, OperandType.None);
        public static readonly OpCode RET = new OpCode(OpCodeValues.RET, OperandType.None);
        public static readonly OpCode LEA_BC_IND_HL_DISP = new OpCode(OpCodeValues.LEA_BC_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_DE_IND_HL_DISP = new OpCode(OpCodeValues.LEA_DE_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_BC_IND_IX_DISP = new OpCode(OpCodeValues.LEA_BC_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_DE_IND_IX_DISP = new OpCode(OpCodeValues.LEA_DE_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_BC_IND_IY_DISP = new OpCode(OpCodeValues.LEA_BC_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_DE_IND_IY_DISP = new OpCode(OpCodeValues.LEA_DE_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode EXTENDED_PREFIX = new OpCode(OpCodeValues.EXTENDED_PREFIX, OperandType.None);
        public static readonly OpCode LD_SP_IMM16 = new OpCode(OpCodeValues.LD_SP_IMM16, OperandType.Implicit16);
        public static readonly OpCode LD_IV_IMM16 = new OpCode(OpCodeValues.LD_IV_IMM16, OperandType.Implicit16);
        public static readonly OpCode LD_B_ABS = new OpCode(OpCodeValues.LD_B_ABS, OperandType.Absolute);
        public static readonly OpCode LD_C_ABS = new OpCode(OpCodeValues.LD_C_ABS, OperandType.Absolute);
        public static readonly OpCode LD_D_ABS = new OpCode(OpCodeValues.LD_D_ABS, OperandType.Absolute);
        public static readonly OpCode LD_E_ABS = new OpCode(OpCodeValues.LD_E_ABS, OperandType.Absolute);
        public static readonly OpCode LD_H_ABS = new OpCode(OpCodeValues.LD_H_ABS, OperandType.Absolute);
        public static readonly OpCode LD_L_ABS = new OpCode(OpCodeValues.LD_L_ABS, OperandType.Absolute);
        public static readonly OpCode LD_BC_ABS = new OpCode(OpCodeValues.LD_BC_ABS, OperandType.Absolute);
        public static readonly OpCode LD_DE_ABS = new OpCode(OpCodeValues.LD_DE_ABS, OperandType.Absolute);
        public static readonly OpCode LD_IX_ABS = new OpCode(OpCodeValues.LD_IX_ABS, OperandType.Absolute);
        public static readonly OpCode LD_IY_ABS = new OpCode(OpCodeValues.LD_IY_ABS, OperandType.Absolute);
        public static readonly OpCode LD_SP_ABS = new OpCode(OpCodeValues.LD_SP_ABS, OperandType.Absolute);
        public static readonly OpCode LD_IV_ABS = new OpCode(OpCodeValues.LD_IV_ABS, OperandType.Absolute);
        public static readonly OpCode LD_IX_IND_HL = new OpCode(OpCodeValues.LD_IX_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_IY_IND_HL = new OpCode(OpCodeValues.LD_IY_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_SP_IND_HL = new OpCode(OpCodeValues.LD_SP_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_IV_IND_HL = new OpCode(OpCodeValues.LD_IV_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_LR_IND_HL = new OpCode(OpCodeValues.LD_LR_IND_HL, OperandType.Indirect);
        public static readonly OpCode LD_BC_IND_IX = new OpCode(OpCodeValues.LD_BC_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_DE_IND_IX = new OpCode(OpCodeValues.LD_DE_IND_IX, OperandType.Indirect);
        public static readonly OpCode LD_BC_IND_IY = new OpCode(OpCodeValues.LD_BC_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_DE_IND_IY = new OpCode(OpCodeValues.LD_DE_IND_IY, OperandType.Indirect);
        public static readonly OpCode LD_B_IND_IX_DISP = new OpCode(OpCodeValues.LD_B_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_C_IND_IX_DISP = new OpCode(OpCodeValues.LD_C_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_D_IND_IX_DISP = new OpCode(OpCodeValues.LD_D_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_E_IND_IX_DISP = new OpCode(OpCodeValues.LD_E_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_H_IND_IX_DISP = new OpCode(OpCodeValues.LD_H_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_L_IND_IX_DISP = new OpCode(OpCodeValues.LD_L_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_BC_IND_IX_DISP = new OpCode(OpCodeValues.LD_BC_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_DE_IND_IX_DISP = new OpCode(OpCodeValues.LD_DE_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_B_IND_IY_DISP = new OpCode(OpCodeValues.LD_B_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_C_IND_IY_DISP = new OpCode(OpCodeValues.LD_C_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_D_IND_IY_DISP = new OpCode(OpCodeValues.LD_D_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_E_IND_IY_DISP = new OpCode(OpCodeValues.LD_E_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_H_IND_IY_DISP = new OpCode(OpCodeValues.LD_H_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_L_IND_IY_DISP = new OpCode(OpCodeValues.LD_L_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_BC_IND_IY_DISP = new OpCode(OpCodeValues.LD_BC_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_DE_IND_IY_DISP = new OpCode(OpCodeValues.LD_DE_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_ABS_B = new OpCode(OpCodeValues.LD_ABS_B, OperandType.Absolute);
        public static readonly OpCode LD_ABS_C = new OpCode(OpCodeValues.LD_ABS_C, OperandType.Absolute);
        public static readonly OpCode LD_ABS_D = new OpCode(OpCodeValues.LD_ABS_D, OperandType.Absolute);
        public static readonly OpCode LD_ABS_E = new OpCode(OpCodeValues.LD_ABS_E, OperandType.Absolute);
        public static readonly OpCode LD_ABS_H = new OpCode(OpCodeValues.LD_ABS_H, OperandType.Absolute);
        public static readonly OpCode LD_ABS_L = new OpCode(OpCodeValues.LD_ABS_L, OperandType.Absolute);
        public static readonly OpCode LD_ABS_BC = new OpCode(OpCodeValues.LD_ABS_BC, OperandType.Absolute);
        public static readonly OpCode LD_ABS_DE = new OpCode(OpCodeValues.LD_ABS_DE, OperandType.Absolute);
        public static readonly OpCode LD_ABS_IX = new OpCode(OpCodeValues.LD_ABS_IX, OperandType.Absolute);
        public static readonly OpCode LD_ABS_IY = new OpCode(OpCodeValues.LD_ABS_IY, OperandType.Absolute);
        public static readonly OpCode LD_ABS_SP = new OpCode(OpCodeValues.LD_ABS_SP, OperandType.Absolute);
        public static readonly OpCode LD_ABS_IV = new OpCode(OpCodeValues.LD_ABS_IV, OperandType.Absolute);
        public static readonly OpCode LD_IND_HL_IX = new OpCode(OpCodeValues.LD_IND_HL_IX, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_IY = new OpCode(OpCodeValues.LD_IND_HL_IY, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_SP = new OpCode(OpCodeValues.LD_IND_HL_SP, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_IV = new OpCode(OpCodeValues.LD_IND_HL_IV, OperandType.Indirect);
        public static readonly OpCode LD_IND_HL_LR = new OpCode(OpCodeValues.LD_IND_HL_LR, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_BC = new OpCode(OpCodeValues.LD_IND_IX_BC, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_DE = new OpCode(OpCodeValues.LD_IND_IX_DE, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_BC = new OpCode(OpCodeValues.LD_IND_IY_BC, OperandType.Indirect);
        public static readonly OpCode LD_IND_IY_DE = new OpCode(OpCodeValues.LD_IND_IY_DE, OperandType.Indirect);
        public static readonly OpCode LD_IND_IX_DISP_B = new OpCode(OpCodeValues.LD_IND_IX_DISP_B, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IX_DISP_C = new OpCode(OpCodeValues.LD_IND_IX_DISP_C, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IX_DISP_D = new OpCode(OpCodeValues.LD_IND_IX_DISP_D, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IX_DISP_E = new OpCode(OpCodeValues.LD_IND_IX_DISP_E, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IX_DISP_H = new OpCode(OpCodeValues.LD_IND_IX_DISP_H, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IX_DISP_L = new OpCode(OpCodeValues.LD_IND_IX_DISP_L, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IX_DISP_BC = new OpCode(OpCodeValues.LD_IND_IX_DISP_BC, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IX_DISP_DE = new OpCode(OpCodeValues.LD_IND_IX_DISP_DE, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_B = new OpCode(OpCodeValues.LD_IND_IY_DISP_B, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_C = new OpCode(OpCodeValues.LD_IND_IY_DISP_C, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_D = new OpCode(OpCodeValues.LD_IND_IY_DISP_D, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_E = new OpCode(OpCodeValues.LD_IND_IY_DISP_E, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_H = new OpCode(OpCodeValues.LD_IND_IY_DISP_H, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_L = new OpCode(OpCodeValues.LD_IND_IY_DISP_L, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_BC = new OpCode(OpCodeValues.LD_IND_IY_DISP_BC, OperandType.IndirectDisplacement);
        public static readonly OpCode LD_IND_IY_DISP_DE = new OpCode(OpCodeValues.LD_IND_IY_DISP_DE, OperandType.IndirectDisplacement);
        public static readonly OpCode MOV_C_B = new OpCode(OpCodeValues.MOV_C_B, OperandType.None);
        public static readonly OpCode MOV_D_B = new OpCode(OpCodeValues.MOV_D_B, OperandType.None);
        public static readonly OpCode MOV_E_B = new OpCode(OpCodeValues.MOV_E_B, OperandType.None);
        public static readonly OpCode MOV_H_B = new OpCode(OpCodeValues.MOV_H_B, OperandType.None);
        public static readonly OpCode MOV_L_B = new OpCode(OpCodeValues.MOV_L_B, OperandType.None);
        public static readonly OpCode MOV_B_C = new OpCode(OpCodeValues.MOV_B_C, OperandType.None);
        public static readonly OpCode MOV_D_C = new OpCode(OpCodeValues.MOV_D_C, OperandType.None);
        public static readonly OpCode MOV_E_C = new OpCode(OpCodeValues.MOV_E_C, OperandType.None);
        public static readonly OpCode MOV_H_C = new OpCode(OpCodeValues.MOV_H_C, OperandType.None);
        public static readonly OpCode MOV_L_C = new OpCode(OpCodeValues.MOV_L_C, OperandType.None);
        public static readonly OpCode MOV_B_D = new OpCode(OpCodeValues.MOV_B_D, OperandType.None);
        public static readonly OpCode MOV_C_D = new OpCode(OpCodeValues.MOV_C_D, OperandType.None);
        public static readonly OpCode MOV_E_D = new OpCode(OpCodeValues.MOV_E_D, OperandType.None);
        public static readonly OpCode MOV_H_D = new OpCode(OpCodeValues.MOV_H_D, OperandType.None);
        public static readonly OpCode MOV_L_D = new OpCode(OpCodeValues.MOV_L_D, OperandType.None);
        public static readonly OpCode MOV_B_E = new OpCode(OpCodeValues.MOV_B_E, OperandType.None);
        public static readonly OpCode MOV_C_E = new OpCode(OpCodeValues.MOV_C_E, OperandType.None);
        public static readonly OpCode MOV_D_E = new OpCode(OpCodeValues.MOV_D_E, OperandType.None);
        public static readonly OpCode MOV_H_E = new OpCode(OpCodeValues.MOV_H_E, OperandType.None);
        public static readonly OpCode MOV_L_E = new OpCode(OpCodeValues.MOV_L_E, OperandType.None);
        public static readonly OpCode MOV_B_H = new OpCode(OpCodeValues.MOV_B_H, OperandType.None);
        public static readonly OpCode MOV_C_H = new OpCode(OpCodeValues.MOV_C_H, OperandType.None);
        public static readonly OpCode MOV_D_H = new OpCode(OpCodeValues.MOV_D_H, OperandType.None);
        public static readonly OpCode MOV_E_H = new OpCode(OpCodeValues.MOV_E_H, OperandType.None);
        public static readonly OpCode MOV_L_H = new OpCode(OpCodeValues.MOV_L_H, OperandType.None);
        public static readonly OpCode MOV_B_L = new OpCode(OpCodeValues.MOV_B_L, OperandType.None);
        public static readonly OpCode MOV_C_L = new OpCode(OpCodeValues.MOV_C_L, OperandType.None);
        public static readonly OpCode MOV_D_L = new OpCode(OpCodeValues.MOV_D_L, OperandType.None);
        public static readonly OpCode MOV_E_L = new OpCode(OpCodeValues.MOV_E_L, OperandType.None);
        public static readonly OpCode MOV_H_L = new OpCode(OpCodeValues.MOV_H_L, OperandType.None);
        public static readonly OpCode MOV_DE_BC = new OpCode(OpCodeValues.MOV_DE_BC, OperandType.None);
        public static readonly OpCode MOV_IX_BC = new OpCode(OpCodeValues.MOV_IX_BC, OperandType.None);
        public static readonly OpCode MOV_IY_BC = new OpCode(OpCodeValues.MOV_IY_BC, OperandType.None);
        public static readonly OpCode MOV_BC_DE = new OpCode(OpCodeValues.MOV_BC_DE, OperandType.None);
        public static readonly OpCode MOV_IX_DE = new OpCode(OpCodeValues.MOV_IX_DE, OperandType.None);
        public static readonly OpCode MOV_IY_DE = new OpCode(OpCodeValues.MOV_IY_DE, OperandType.None);
        public static readonly OpCode MOV_SP_HL = new OpCode(OpCodeValues.MOV_SP_HL, OperandType.None);
        public static readonly OpCode MOV_LR_HL = new OpCode(OpCodeValues.MOV_LR_HL, OperandType.None);
        public static readonly OpCode MOV_IV_HL = new OpCode(OpCodeValues.MOV_IV_HL, OperandType.None);
        public static readonly OpCode MOV_BC_IX = new OpCode(OpCodeValues.MOV_BC_IX, OperandType.None);
        public static readonly OpCode MOV_DE_IX = new OpCode(OpCodeValues.MOV_DE_IX, OperandType.None);
        public static readonly OpCode MOV_BC_IY = new OpCode(OpCodeValues.MOV_BC_IY, OperandType.None);
        public static readonly OpCode MOV_DE_IY = new OpCode(OpCodeValues.MOV_DE_IY, OperandType.None);
        public static readonly OpCode MOV_HL_SP = new OpCode(OpCodeValues.MOV_HL_SP, OperandType.None);
        public static readonly OpCode MOV_HL_LR = new OpCode(OpCodeValues.MOV_HL_LR, OperandType.None);
        public static readonly OpCode MOV_HL_IV = new OpCode(OpCodeValues.MOV_HL_IV, OperandType.None);
        public static readonly OpCode AND_IND_HL = new OpCode(OpCodeValues.AND_IND_HL, OperandType.Indirect);
        public static readonly OpCode AND_IND_IX = new OpCode(OpCodeValues.AND_IND_IX, OperandType.Indirect);
        public static readonly OpCode AND_IND_IY = new OpCode(OpCodeValues.AND_IND_IY, OperandType.Indirect);
        public static readonly OpCode OR_IND_HL = new OpCode(OpCodeValues.OR_IND_HL, OperandType.Indirect);
        public static readonly OpCode OR_IND_IX = new OpCode(OpCodeValues.OR_IND_IX, OperandType.Indirect);
        public static readonly OpCode OR_IND_IY = new OpCode(OpCodeValues.OR_IND_IY, OperandType.Indirect);
        public static readonly OpCode XOR_IND_HL = new OpCode(OpCodeValues.XOR_IND_HL, OperandType.Indirect);
        public static readonly OpCode XOR_IND_IX = new OpCode(OpCodeValues.XOR_IND_IX, OperandType.Indirect);
        public static readonly OpCode XOR_IND_IY = new OpCode(OpCodeValues.XOR_IND_IY, OperandType.Indirect);
        public static readonly OpCode ADD_HL_BC = new OpCode(OpCodeValues.ADD_HL_BC, OperandType.Indirect);
        public static readonly OpCode ADD_HL_DE = new OpCode(OpCodeValues.ADD_HL_DE, OperandType.Indirect);
        public static readonly OpCode ADD_HL_IX = new OpCode(OpCodeValues.ADD_HL_IX, OperandType.Indirect);
        public static readonly OpCode ADD_HL_IY = new OpCode(OpCodeValues.ADD_HL_IY, OperandType.Indirect);
        public static readonly OpCode ADD_A_IND_HL = new OpCode(OpCodeValues.ADD_A_IND_HL, OperandType.Indirect);
        public static readonly OpCode ADD_HL_IND_HL = new OpCode(OpCodeValues.ADD_HL_IND_HL, OperandType.Indirect);
        public static readonly OpCode ADD_A_IND_IX = new OpCode(OpCodeValues.ADD_A_IND_IX, OperandType.Indirect);
        public static readonly OpCode ADD_HL_IND_IX = new OpCode(OpCodeValues.ADD_HL_IND_IX, OperandType.Indirect);
        public static readonly OpCode ADD_A_IND_IY = new OpCode(OpCodeValues.ADD_A_IND_IY, OperandType.Indirect);
        public static readonly OpCode ADD_HL_IND_IY = new OpCode(OpCodeValues.ADD_HL_IND_IY, OperandType.Indirect);
        public static readonly OpCode ADC_HL_BC = new OpCode(OpCodeValues.ADC_HL_BC, OperandType.None);
        public static readonly OpCode ADC_HL_DE = new OpCode(OpCodeValues.ADC_HL_DE, OperandType.None);
        public static readonly OpCode ADC_HL_IX = new OpCode(OpCodeValues.ADC_HL_IX, OperandType.None);
        public static readonly OpCode ADC_HL_IY = new OpCode(OpCodeValues.ADC_HL_IY, OperandType.None);
        public static readonly OpCode ADC_A_IND_HL = new OpCode(OpCodeValues.ADC_A_IND_HL, OperandType.Indirect);
        public static readonly OpCode ADC_HL_IND_HL = new OpCode(OpCodeValues.ADC_HL_IND_HL, OperandType.Indirect);
        public static readonly OpCode ADC_A_IND_IX = new OpCode(OpCodeValues.ADC_A_IND_IX, OperandType.Indirect);
        public static readonly OpCode ADC_HL_IND_IX = new OpCode(OpCodeValues.ADC_HL_IND_IX, OperandType.Indirect);
        public static readonly OpCode ADC_A_IND_IY = new OpCode(OpCodeValues.ADC_A_IND_IY, OperandType.Indirect);
        public static readonly OpCode ADC_HL_IND_IY = new OpCode(OpCodeValues.ADC_HL_IND_IY, OperandType.Indirect);
        public static readonly OpCode SUB_HL_BC = new OpCode(OpCodeValues.SUB_HL_BC, OperandType.None);
        public static readonly OpCode SUB_HL_DE = new OpCode(OpCodeValues.SUB_HL_DE, OperandType.None);
        public static readonly OpCode SUB_HL_IX = new OpCode(OpCodeValues.SUB_HL_IX, OperandType.None);
        public static readonly OpCode SUB_HL_IY = new OpCode(OpCodeValues.SUB_HL_IY, OperandType.None);
        public static readonly OpCode SUB_A_IND_HL = new OpCode(OpCodeValues.SUB_A_IND_HL, OperandType.Indirect);
        public static readonly OpCode SUB_HL_IND_HL = new OpCode(OpCodeValues.SUB_HL_IND_HL, OperandType.Indirect);
        public static readonly OpCode SUB_A_IND_IX = new OpCode(OpCodeValues.SUB_A_IND_IX, OperandType.Indirect);
        public static readonly OpCode SUB_HL_IND_IX = new OpCode(OpCodeValues.SUB_HL_IND_IX, OperandType.Indirect);
        public static readonly OpCode SUB_A_IND_IY = new OpCode(OpCodeValues.SUB_A_IND_IY, OperandType.Indirect);
        public static readonly OpCode SUB_HL_IND_IY = new OpCode(OpCodeValues.SUB_HL_IND_IY, OperandType.Indirect);
        public static readonly OpCode SBC_HL_BC = new OpCode(OpCodeValues.SBC_HL_BC, OperandType.None);
        public static readonly OpCode SBC_HL_DE = new OpCode(OpCodeValues.SBC_HL_DE, OperandType.None);
        public static readonly OpCode SBC_HL_IX = new OpCode(OpCodeValues.SBC_HL_IX, OperandType.None);
        public static readonly OpCode SBC_HL_IY = new OpCode(OpCodeValues.SBC_HL_IY, OperandType.None);
        public static readonly OpCode SBC_A_IND_HL = new OpCode(OpCodeValues.SBC_A_IND_HL, OperandType.Indirect);
        public static readonly OpCode SBC_HL_IND_HL = new OpCode(OpCodeValues.SBC_HL_IND_HL, OperandType.Indirect);
        public static readonly OpCode SBC_A_IND_IX = new OpCode(OpCodeValues.SBC_A_IND_IX, OperandType.Indirect);
        public static readonly OpCode SBC_HL_IND_IX = new OpCode(OpCodeValues.SBC_HL_IND_IX, OperandType.Indirect);
        public static readonly OpCode SBC_A_IND_IY = new OpCode(OpCodeValues.SBC_A_IND_IY, OperandType.Indirect);
        public static readonly OpCode SBC_HL_IND_IY = new OpCode(OpCodeValues.SBC_HL_IND_IY, OperandType.Indirect);
        public static readonly OpCode INC_SP = new OpCode(OpCodeValues.INC_SP, OperandType.None);
        public static readonly OpCode DEC_SP = new OpCode(OpCodeValues.DEC_SP, OperandType.None);
        public static readonly OpCode CMP_HL_IMM16 = new OpCode(OpCodeValues.CMP_HL_IMM16, OperandType.Implicit16);
        public static readonly OpCode CMP_A_D = new OpCode(OpCodeValues.CMP_A_D, OperandType.None);
        public static readonly OpCode CMP_A_E = new OpCode(OpCodeValues.CMP_A_E, OperandType.None);
        public static readonly OpCode CMP_A_H = new OpCode(OpCodeValues.CMP_A_H, OperandType.None);
        public static readonly OpCode CMP_A_L = new OpCode(OpCodeValues.CMP_A_L, OperandType.None);
        public static readonly OpCode CMP_A_IND_HL = new OpCode(OpCodeValues.CMP_A_IND_HL, OperandType.Indirect);
        public static readonly OpCode CMP_HL_IND_HL = new OpCode(OpCodeValues.CMP_HL_IND_HL, OperandType.Indirect);
        public static readonly OpCode CMP_A_IND_IX = new OpCode(OpCodeValues.CMP_A_IND_IX, OperandType.Indirect);
        public static readonly OpCode CMP_HL_IND_IX = new OpCode(OpCodeValues.CMP_HL_IND_IX, OperandType.Indirect);
        public static readonly OpCode CMP_A_IND_IY = new OpCode(OpCodeValues.CMP_A_IND_IY, OperandType.Indirect);
        public static readonly OpCode CMP_HL_IND_IY = new OpCode(OpCodeValues.CMP_HL_IND_IY, OperandType.Indirect);
        public static readonly OpCode TEST_HL_IMM16 = new OpCode(OpCodeValues.TEST_HL_IMM16, OperandType.Implicit16);
        public static readonly OpCode TEST_A_D = new OpCode(OpCodeValues.TEST_A_D, OperandType.None);
        public static readonly OpCode TEST_A_E = new OpCode(OpCodeValues.TEST_A_E, OperandType.None);
        public static readonly OpCode TEST_A_H = new OpCode(OpCodeValues.TEST_A_H, OperandType.None);
        public static readonly OpCode TEST_A_L = new OpCode(OpCodeValues.TEST_A_L, OperandType.None);
        public static readonly OpCode TEST_A_IND_HL = new OpCode(OpCodeValues.TEST_A_IND_HL, OperandType.Indirect);
        public static readonly OpCode TEST_HL_IND_HL = new OpCode(OpCodeValues.TEST_HL_IND_HL, OperandType.Indirect);
        public static readonly OpCode TEST_A_IND_IX = new OpCode(OpCodeValues.TEST_A_IND_IX, OperandType.Indirect);
        public static readonly OpCode TEST_HL_IND_IX = new OpCode(OpCodeValues.TEST_HL_IND_IX, OperandType.Indirect);
        public static readonly OpCode TEST_A_IND_IY = new OpCode(OpCodeValues.TEST_A_IND_IY, OperandType.Indirect);
        public static readonly OpCode TEST_HL_IND_IY = new OpCode(OpCodeValues.TEST_HL_IND_IY, OperandType.Indirect);
        public static readonly OpCode PUSH_BC = new OpCode(OpCodeValues.PUSH_BC, OperandType.None);
        public static readonly OpCode PUSH_DE = new OpCode(OpCodeValues.PUSH_DE, OperandType.None);
        public static readonly OpCode PUSH_HL = new OpCode(OpCodeValues.PUSH_HL, OperandType.None);
        public static readonly OpCode PUSH_IX = new OpCode(OpCodeValues.PUSH_IX, OperandType.None);
        public static readonly OpCode PUSH_IY = new OpCode(OpCodeValues.PUSH_IY, OperandType.None);
        public static readonly OpCode PUSH_SP = new OpCode(OpCodeValues.PUSH_SP, OperandType.None);
        public static readonly OpCode PUSH_IV = new OpCode(OpCodeValues.PUSH_IV, OperandType.None);
        public static readonly OpCode POP_BC = new OpCode(OpCodeValues.POP_BC, OperandType.None);
        public static readonly OpCode POP_DE = new OpCode(OpCodeValues.POP_DE, OperandType.None);
        public static readonly OpCode POP_HL = new OpCode(OpCodeValues.POP_HL, OperandType.None);
        public static readonly OpCode POP_IX = new OpCode(OpCodeValues.POP_IX, OperandType.None);
        public static readonly OpCode POP_IY = new OpCode(OpCodeValues.POP_IY, OperandType.None);
        public static readonly OpCode POP_SP = new OpCode(OpCodeValues.POP_SP, OperandType.None);
        public static readonly OpCode POP_IV = new OpCode(OpCodeValues.POP_IV, OperandType.None);
        public static readonly OpCode SCF = new OpCode(OpCodeValues.SCF, OperandType.None);
        public static readonly OpCode SSF = new OpCode(OpCodeValues.SSF, OperandType.None);
        public static readonly OpCode SZF = new OpCode(OpCodeValues.SZF, OperandType.None);
        public static readonly OpCode SIF = new OpCode(OpCodeValues.SIF, OperandType.None);
        public static readonly OpCode CCF = new OpCode(OpCodeValues.CCF, OperandType.None);
        public static readonly OpCode CSF = new OpCode(OpCodeValues.CSF, OperandType.None);
        public static readonly OpCode CZF = new OpCode(OpCodeValues.CZF, OperandType.None);
        public static readonly OpCode CIF = new OpCode(OpCodeValues.CIF, OperandType.None);
        public static readonly OpCode JZ_HL = new OpCode(OpCodeValues.JZ_HL, OperandType.None);
        public static readonly OpCode JNZ_HL = new OpCode(OpCodeValues.JNZ_HL, OperandType.None);
        public static readonly OpCode JC_HL = new OpCode(OpCodeValues.JC_HL, OperandType.None);
        public static readonly OpCode JNC_HL = new OpCode(OpCodeValues.JNC_HL, OperandType.None);
        public static readonly OpCode JS_HL = new OpCode(OpCodeValues.JS_HL, OperandType.None);
        public static readonly OpCode JNS_HL = new OpCode(OpCodeValues.JNS_HL, OperandType.None);
        public static readonly OpCode IRQ = new OpCode(OpCodeValues.IRQ, OperandType.None);
        public static readonly OpCode RETI = new OpCode(OpCodeValues.RETI, OperandType.None);
        public static readonly OpCode LEA_HL_IND_HL_DISP = new OpCode(OpCodeValues.LEA_HL_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_IX_IND_HL_DISP = new OpCode(OpCodeValues.LEA_IX_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_IY_IND_HL_DISP = new OpCode(OpCodeValues.LEA_IY_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_SP_IND_HL_DISP = new OpCode(OpCodeValues.LEA_SP_IND_HL_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_HL_IND_IX_DISP = new OpCode(OpCodeValues.LEA_HL_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_IX_IND_IX_DISP = new OpCode(OpCodeValues.LEA_IX_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_IY_IND_IX_DISP = new OpCode(OpCodeValues.LEA_IY_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_SP_IND_IX_DISP = new OpCode(OpCodeValues.LEA_SP_IND_IX_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_HL_IND_IY_DISP = new OpCode(OpCodeValues.LEA_HL_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_IX_IND_IY_DISP = new OpCode(OpCodeValues.LEA_IX_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_IY_IND_IY_DISP = new OpCode(OpCodeValues.LEA_IY_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_SP_IND_IY_DISP = new OpCode(OpCodeValues.LEA_SP_IND_IY_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_BC_IND_SP_DISP = new OpCode(OpCodeValues.LEA_BC_IND_SP_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_DE_IND_SP_DISP = new OpCode(OpCodeValues.LEA_DE_IND_SP_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_HL_IND_SP_DISP = new OpCode(OpCodeValues.LEA_HL_IND_SP_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_IX_IND_SP_DISP = new OpCode(OpCodeValues.LEA_IX_IND_SP_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_IY_IND_SP_DISP = new OpCode(OpCodeValues.LEA_IY_IND_SP_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_SP_IND_SP_DISP = new OpCode(OpCodeValues.LEA_SP_IND_SP_DISP, OperandType.IndirectDisplacement);
        public static readonly OpCode LEA_BC_IND_IX_OFFSET_HL = new OpCode(OpCodeValues.LEA_BC_IND_IX_OFFSET_HL, OperandType.IndirectOffset);
        public static readonly OpCode LEA_DE_IND_IX_OFFSET_HL = new OpCode(OpCodeValues.LEA_DE_IND_IX_OFFSET_HL, OperandType.IndirectOffset);
        public static readonly OpCode LEA_HL_IND_IX_OFFSET_HL = new OpCode(OpCodeValues.LEA_HL_IND_IX_OFFSET_HL, OperandType.IndirectOffset);
        public static readonly OpCode LEA_IX_IND_IX_OFFSET_HL = new OpCode(OpCodeValues.LEA_IX_IND_IX_OFFSET_HL, OperandType.IndirectOffset);
        public static readonly OpCode LEA_IY_IND_IX_OFFSET_HL = new OpCode(OpCodeValues.LEA_IY_IND_IX_OFFSET_HL, OperandType.IndirectOffset);
        public static readonly OpCode LEA_BC_IND_IY_OFFSET_HL = new OpCode(OpCodeValues.LEA_BC_IND_IY_OFFSET_HL, OperandType.IndirectOffset);
        public static readonly OpCode LEA_DE_IND_IY_OFFSET_HL = new OpCode(OpCodeValues.LEA_DE_IND_IY_OFFSET_HL, OperandType.IndirectOffset);
        public static readonly OpCode LEA_HL_IND_IY_OFFSET_HL = new OpCode(OpCodeValues.LEA_HL_IND_IY_OFFSET_HL, OperandType.IndirectOffset);
        public static readonly OpCode LEA_IX_IND_IY_OFFSET_HL = new OpCode(OpCodeValues.LEA_IX_IND_IY_OFFSET_HL, OperandType.IndirectOffset);
        public static readonly OpCode LEA_IY_IND_IY_OFFSET_HL = new OpCode(OpCodeValues.LEA_IY_IND_IY_OFFSET_HL, OperandType.IndirectOffset);
    }
}